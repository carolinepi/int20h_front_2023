{"ast":null,"code":"var _jsxFileName = \"/Users/caroline/EatWell/src/components/ByLetter/ByLetterRecipes.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport NoRecipes from '../Pages/NoRecipes';\nimport LoadingPage from '../Pages/LoadingPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RecipesByLetterList(_ref) {\n  _s();\n  let {\n    match\n  } = _ref;\n  const letter = match.params.letter;\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  setTimeout(() => setLoading(false), 5000);\n  const [recipeNum, setRecipeNum] = useState(10);\n  const moreRecipesHandler = () => setRecipeNum(recipeNum + 10);\n  useEffect(() => {\n    //fetch(`/api/letter/${letter}`)\n    fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${letter}`).then(response => response.json()).then(data => {\n      if (data.meals === null) return;\n      setRecipes(data.meals);\n      setLoading(false);\n    });\n  }, [letter]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading === true ? /*#__PURE__*/_jsxDEV(LoadingPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this) : loading === false && recipes.length === 0 ? /*#__PURE__*/_jsxDEV(NoRecipes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"letter-recipes\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipes-declaration search\",\n        children: [\"Recipes starting with the letter \", letter.toUpperCase()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipes-list\",\n        children: recipes.slice(0, recipeNum).map((meal, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/recipes/id/${meal.idMeal}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `recipe-${index}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"recipe-name\",\n                children: meal.strMeal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"recipe-image\",\n                src: meal.strMealThumb,\n                alt: \"T_T\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), recipes.length > recipeNum ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: moreRecipesHandler,\n          children: \"More Recipes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(RecipesByLetterList, \"EVdtYk1I7FszQFRhfhKX+tUAXjI=\");\n_c = RecipesByLetterList;\nexport default RecipesByLetterList;\nvar _c;\n$RefreshReg$(_c, \"RecipesByLetterList\");","map":{"version":3,"names":["React","useEffect","useState","Link","NoRecipes","LoadingPage","RecipesByLetterList","match","letter","params","recipes","setRecipes","loading","setLoading","setTimeout","recipeNum","setRecipeNum","moreRecipesHandler","fetch","then","response","json","data","meals","length","toUpperCase","slice","map","meal","index","idMeal","strMeal","strMealThumb"],"sources":["/Users/caroline/EatWell/src/components/ByLetter/ByLetterRecipes.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport NoRecipes from '../Pages/NoRecipes';\nimport LoadingPage from '../Pages/LoadingPage';\n\nfunction RecipesByLetterList({match}) \n{\n    const letter = match.params.letter;\n    const [recipes, setRecipes] = useState([]);\n    \n    const [loading, setLoading] = useState(true);\n    setTimeout(() => setLoading(false), 5000);\n\n    const [recipeNum, setRecipeNum] = useState(10);\n    const moreRecipesHandler = () => setRecipeNum(recipeNum + 10);\n\n    useEffect(() => {\n        //fetch(`/api/letter/${letter}`)\n        fetch(`https://www.themealdb.com/api/json/v1/1/search.php?f=${letter}`)\n            .then(response => response.json())\n            .then(data => {\n                if(data.meals === null) return;\n                setRecipes(data.meals);\n                setLoading(false)\n            });\n    }, [letter]);\n\n    return(\n        <>\n        {loading === true ? (\n            <LoadingPage />\n        ) : loading === false && recipes.length === 0 ? (\n            <NoRecipes />\n        ) : (\n            <div className='letter-recipes'>\n                <div className='recipes-declaration search'>Recipes starting with the letter {letter.toUpperCase()}</div>\n                <div className='recipes-list'>\n                    {recipes.slice(0, recipeNum).map((meal, index) => (\n                        <div className='recipe' key={index}>\n                            <Link to={`/recipes/id/${meal.idMeal}`}>\n                            <div className={`recipe-${index}`}>\n                                <div className='recipe-name'>{meal.strMeal}</div>\n                                <img className='recipe-image' src={meal.strMealThumb} alt='T_T'/>\n                            </div>\n                            </Link>\n                        </div>\n                    ))}\n                </div>\n                {recipes.length > recipeNum ? (\n                    <div className='button-container'>\n                        <button className='button' onClick={moreRecipesHandler}>More Recipes</button>\n                    </div>\n                ) : (\n                    <></>\n                )}\n            </div>\n        )}\n        </>\n    );\n}\n\nexport default RecipesByLetterList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,IAAI,QAAO,kBAAkB;AACrC,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,WAAW,MAAM,sBAAsB;AAAC;AAAA;AAE/C,SAASC,mBAAmB,OAC5B;EAAA;EAAA,IAD6B;IAACC;EAAK,CAAC;EAEhC,MAAMC,MAAM,GAAGD,KAAK,CAACE,MAAM,CAACD,MAAM;EAClC,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5CY,UAAU,CAAC,MAAMD,UAAU,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;EAEzC,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMe,kBAAkB,GAAG,MAAMD,YAAY,CAACD,SAAS,GAAG,EAAE,CAAC;EAE7Dd,SAAS,CAAC,MAAM;IACZ;IACAiB,KAAK,CAAE,wDAAuDV,MAAO,EAAC,CAAC,CAClEW,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACV,IAAGA,IAAI,CAACC,KAAK,KAAK,IAAI,EAAE;MACxBZ,UAAU,CAACW,IAAI,CAACC,KAAK,CAAC;MACtBV,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACV,CAAC,EAAE,CAACL,MAAM,CAAC,CAAC;EAEZ,oBACI;IAAA,UACCI,OAAO,KAAK,IAAI,gBACb,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAG,GACfA,OAAO,KAAK,KAAK,IAAIF,OAAO,CAACc,MAAM,KAAK,CAAC,gBACzC,QAAC,SAAS;MAAA;MAAA;MAAA;IAAA,QAAG,gBAEb;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC3B;QAAK,SAAS,EAAC,4BAA4B;QAAA,WAAC,mCAAiC,EAAChB,MAAM,CAACiB,WAAW,EAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO,eACzG;QAAK,SAAS,EAAC,cAAc;QAAA,UACxBf,OAAO,CAACgB,KAAK,CAAC,CAAC,EAAEX,SAAS,CAAC,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzC;UAAK,SAAS,EAAC,QAAQ;UAAA,uBACnB,QAAC,IAAI;YAAC,EAAE,EAAG,eAAcD,IAAI,CAACE,MAAO,EAAE;YAAA,uBACvC;cAAK,SAAS,EAAG,UAASD,KAAM,EAAE;cAAA,wBAC9B;gBAAK,SAAS,EAAC,aAAa;gBAAA,UAAED,IAAI,CAACG;cAAO;gBAAA;gBAAA;gBAAA;cAAA,QAAO,eACjD;gBAAK,SAAS,EAAC,cAAc;gBAAC,GAAG,EAAEH,IAAI,CAACI,YAAa;gBAAC,GAAG,EAAC;cAAK;gBAAA;gBAAA;gBAAA;cAAA,QAAE;YAAA;cAAA;cAAA;cAAA;YAAA;UAC/D;YAAA;YAAA;YAAA;UAAA;QACC,GANkBH,KAAK;UAAA;UAAA;UAAA;QAAA,QAQrC;MAAC;QAAA;QAAA;QAAA;MAAA,QACA,EACLnB,OAAO,CAACc,MAAM,GAAGT,SAAS,gBACvB;QAAK,SAAS,EAAC,kBAAkB;QAAA,uBAC7B;UAAQ,SAAS,EAAC,QAAQ;UAAC,OAAO,EAAEE,kBAAmB;UAAA,UAAC;QAAY;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA,QAC3E,gBAEN,qCACH;IAAA;MAAA;MAAA;MAAA;IAAA;EAER,iBACE;AAEX;AAAC,GAtDQX,mBAAmB;AAAA,KAAnBA,mBAAmB;AAwD5B,eAAeA,mBAAmB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}